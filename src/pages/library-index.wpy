<style lang="scss">
  .order {
    padding: 0 24rpx;
    display: inline-block;
    position: relative;
    overflow:hidden;
    text-overflow:ellipsis;
    &::before {
      content: " ";
      position: absolute;
      top: -5rpx;
      right: 0;
      border-width: 10rpx 8rpx;
      border-color: transparent;
      border-style: solid;
      border-bottom-color: #cccccc;
    }
    &::after {
      content: " ";
      position: absolute;
      bottom: -5px;
      right: 0;
      border-width: 10rpx 8rpx;
      border-color: transparent;
      border-style: solid;
      border-top-color: #cccccc;
    }
    &_desc {
      &::after {
        border-top-color: #999999;
      }
    }
    &_asc {
      &::before {
        border-bottom-color: #999999;
      }
    }
  }
  .media-box__checkbox:first-child {
    margin-right: 20rpx;
  }
  .media-box__checkbox {
    position: relative;
    font-size: 60rpx;
    overflow: hidden;
    checkbox {
      position: absolute;
      left: -9999em;
    }
  }
</style>

<template>
  <import src="../template/business-card.wxml"/>
  <scroll-view class="body" scroll-y="{{true}}" bindscrolltolower="bindScrollLower" style="height:{{windowHeight}}px">
    <search-bar :keyword.sync="searchKeyword" @confirm.user="bindConfirm" placeholder="输入姓名/公司"></search-bar>
    <view class="cells cells_order">
      <view class="cell">
        <label class="cell__bd">
          <picker class="picker" mode="region" custom-item="全部地区" bindchange="bindRegionChange" name="region" value="{{region}}">
            <view class="picker__text" wx:if="{{region[2] !== '全部地区'}}">{{region[2]}}</view>
            <view class="picker__text" wx:elif="{{region[1] !== '全部地区'}}">{{region[1]}}</view>
            <view class="picker__text" wx:else>{{region[0]}}</view>
          </picker>
        </label>
        <label class="cell__bd">
          <picker class="picker" mode="selector" range="{{rIndustryCategory}}" bindchange="bindSelectorChange('industry_category')" name="industry_category" value="{{industry_category}}">
            <view class="picker__text" wx:if="{{industry_category === 0}}">行业</view>
            <view class="picker__text" wx:else>{{rIndustryCategory[industry_category]}}</view>
          </picker>
        </label>
        <label class="cell__bd">
          <picker class="picker" mode="selector" range="{{rPositionType}}" bindchange="bindSelectorChange('position_type')" name="position_type" value="{{position_type}}">
            <view class="picker__text" wx:if="{{position_type === 0}}">职务</view>
            <view class="picker__text" wx:else>{{rPositionType[position_type]}}</view>
          </picker>
        </label>
        <view class="cell__bd" @tap="bindChangeOrder">
          <view class="order {{order ? 'order_asc' : 'order_desc' }}">热度</view>
        </view>
      </view>
    </view>
    <!-- 列表 -->
    <form class="panel" report-submit="{{true}}" bindsubmit="bindFormSubmit" wx:if="{{list.length > 0}}">
      <checkbox-group name="cards" class="panel__bd" bindchange="bindCheckboxChange">
        <repeat for="{{list}}" key="list" index="index" item="item">
          <button class="media-box media-box_appmsg" type="inherit" data-type="{{buttonType}}" data-index="{{index}}" data-key="{{item.info['card_key']}}" formType="submit">
            <view class="media-box__checkbox" hidden="{{!isShow}}">
              <checkbox value="{{item.info.id}}" disabled="{{true}}" checked="{{item.info.checked}}" />
              <i class="iconfont icon-check-circle" wx:if="{{item.info.checked}}"></i>
              <i class="iconfont icon-circle-o" wx:else></i>
            </view>
            <view class="media-box__hd">
              <image class="media-box__thumb round" src="{{host}}{{item.info.logo_url}}" lazy-load="{{true}}" wx:if="{{item.info.logo_url}}" />
              <i class="iconfont icon-v-circle" wx:if="{{item.info.userInfo.user_verify_status === 1}}"></i>
            </view>
            <view class="media-box__bd">
              <view class="media-box__title">{{item.info.name}}</view>
              <view class="media-box__desc">{{item.info.position}}</view>
              <view class="media-box__desc">{{item.info.company}}</view>
            </view>
          </button>
        </repeat>
      </checkbox-group>
      <movable-area class="fix-area">
        <movable-view class="fix-area__btn" y="{{windowHeight - 100}}" out-of-bounds="{{false}}" direction="vertical">
          <!-- 下拉框 -->
          <view class="dropdown dropdown_up" hidden="{{!isShow}}">
            <view class="dropdown__content">
              <button class="dropdown__cell" data-type="checkAll" type="inherit" formType="submit">
                <view class="dropdown__cell__bd">全选</view>
              </button>
              <button class="dropdown__cell" data-type="submit" type="inherit" formType="submit">
                <view class="dropdown__cell__bd">确认</view>
              </button>
              <view class="dropdown__arrow"></view>
            </view>
          </view>
          <button type="primary" @tap="bindSendCard" formType="submit">
            <i class="iconfont icon-send"></i> 递名片
          </button>
        </movable-view>
      </movable-area>
    </form>
    <!-- 空白 -->
    <view class="page-error" wx:elif="{{!searchLoading}}">
      <image class="page-error__image" src="../images/list_error.png" style="width: 291rpx;height: 170rpx"></image>
      <view class="loadmore">
        <text class="loadmore__tips">暂无名片</text>
      </view>
    </view>
    <!-- 加载 -->
    <view class="loadmore" wx:if="{{searchLoading}}">
      <i class="icon-loading"></i>
      <text class="loadmore__tips">正在加载</text>
    </view>
    <view class="loadmore loadmore_line" wx:if="{{searchLoadingComplete && params.page > 2}}">
      <text class="loadmore__tips">已经是全部了</text>
    </view>
  </scroll-view>

</template>

<script>
  import wepy from 'wepy'
  import ConfigMixin from '../mixins/config'
  import RestructureMixin from '../mixins/restructure'
  import SearchBarComponent from '@Components/search-bar'
  export default class LibraryIndex extends wepy.page {
    config = {
      navigationBarTitleText: '名片库'
    }
    mixins = [RestructureMixin, ConfigMixin]
    components = {
      'search-bar': SearchBarComponent
    }
    data = {
      isShow: false,
      rIndustryCategory: ['全部', '计算机相关', '住宿、餐饮', '金融、保险 ', '教育培训', '建筑、制造', '其他'],
      industry_category: 0,
      rPositionType: ['全部', '董事长', '总经理', '副总经理', '总监', '经理'],
      position_type: 0,
      region: ['全部地区', '全部地区', '全部地区'],
      order: true,
      buttonType: 'link',
      checked: false,
      list: [],
      params: {
        page: 1
      },
      searchKeyword: '', // 搜索关键字
      searchLoading: false, // 上拉加载更多
      searchLoadingComplete: false // 加载完毕
    }
    methods = {
      // 地区选择绑定事件
      bindRegionChange(e) {
        this.region = e.detail.value
        this.list = []
        this.fetchSearchList({
          page: 1,
          province_name: this.region[0] === '全部地区' ? '' : this.region[0],
          city_name: this.region[1] === '全部地区' ? '' : this.region[1],
          area_name: this.region[2] === '全部地区' ? '' : this.region[2]
        })
      },
      // 下拉框绑定事件
      bindSelectorChange(field, e) {
        const params = { page: 1 }
        this[field] = e.detail.value
        params[field] = e.detail.value - 1 === -1 ? '' : e.detail.value - 1
        this.list = []
        this.fetchSearchList(params)
      },
      // 热度排序绑定事件
      bindChangeOrder() {
        this.order = !this.order
        this.list = []
        this.fetchSearchList({
          page: 1,
          sort: this.order ? 'collect_count' : '-collect_count'
        })
      },
      // 滚动到底部触发事件
      bindScrollLower(e) {
        if (this.searchLoadingComplete || this.searchLoading) {
          return
        }
        let page = this.params.page || 1
        this.fetchSearchList({page: ++page})
      },
      // 右下角搜索事件
      bindConfirm(keyword) {
        this.list = []
        this.fetchSearchList({
          search: keyword,
          page: 1
        })
      },
      bindSendCard() {
        this.checked = false
        this.isShow = !this.isShow
        this.buttonType = this.isShow ? 'checkbox' : 'link'
      },
      bindCheckboxChange(e) {
        console.log(e)
      },
      bindFormSubmit(e) {
        const { value, target } = e.detail
        switch (target.dataset.type) {
          case 'checkbox':
            const { index } = target.dataset
            const { list } = this.data
            this.list[index]['info']['checked'] = !list[index]['info']['checked']
            break
          case 'link':
            wepy.navigateTo({
              url: `user-share?scene=${target.dataset.key}`
            })
            break
          case 'checkAll':
            this.checked = !this.checked
            this.list.forEach((element, index, arr) => {
              arr[index]['info']['checked'] = this.checked
            })
            break
          case 'submit':
            if (value.cards && value.cards.length > 0) {
              this.$parent.post(`/order/muti-post-card`, value).then(res => {
                const { code, data, message } = res
                if (code === 0) {
                  wepy.navigateTo({url: `library-payment?orderID=${data.id}`})
                } else {
                  wepy.showModal({
                    title: '温馨提示',
                    content: message,
                    showCancel: false,
                    confirmColor: '#1875f0'
                  })
                }
              })
            } else {
              wepy.showModal({
                title: '温馨提示',
                content: '请选择需要传递的名片',
                showCancel: false,
                confirmColor: '#1875f0'
              })
            }
            break
        }
      }
    }
    onRoute() {
      this.isShow = false
      if (this.list.length === 0) {
        this.fetchSearchList()
      }
    }
    // 搜索名片库列表
    fetchSearchList(params = {}) {
      this.searchLoading = true
      const URL = '/cards-public'
      Object.assign(this.params, params)
      this.$parent.get(URL, this.params).then(res => {
        const { data } = res
        setTimeout(() => {
          this.list.push(...this.restructureList(data.list))
          // 隐藏加载文字
          this.searchLoadingComplete = (this.params.page >= data.pageCount)
          this.searchLoading = false
          this.$apply()
        }, 200)
      })
    }
  }
</script>
